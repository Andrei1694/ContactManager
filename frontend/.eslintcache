[{"C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\index.js":"1","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\App.js":"2","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\Navbar.js":"4","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\UpdateModal.js":"5","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\DeleteModal.js":"6","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\CreateModal.js":"7"},{"size":504,"mtime":1610837985697,"results":"8","hashOfConfig":"9"},{"size":2061,"mtime":1610840336199,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":577,"mtime":1610834967760,"results":"12","hashOfConfig":"9"},{"size":2120,"mtime":1610839463392,"results":"13","hashOfConfig":"9"},{"size":1554,"mtime":1610840063194,"results":"14","hashOfConfig":"9"},{"size":1877,"mtime":1610839317067,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1dmm2yw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\index.js",[],["35","36"],"C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\App.js",[],"C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\Navbar.js",["37","38","39","40","41","42","43","44","45","46","47"],"import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst Example = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand href=\"/\">Contact Manager</NavbarBrand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\UpdateModal.js",["48","49","50"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText  } from 'reactstrap';\r\nimport axios from 'axios'\r\n\r\nconst UpdateModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n    id,\r\n    update\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [contact, setContactName] = useState()\r\n  const [phone, setPhoneNumber] = useState()\r\n  \r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(async () => {\r\n      const response = await axios.get(`http://localhost:8080/tutorials/findById/${id}`)\r\n      setContactName(response.data.contactName)\r\n      setPhoneNumber(response.data.phoneNumber)\r\n  }, [])\r\n\r\n  const updateContact = async() => {\r\n      try{\r\n        await axios.put(`http://localhost:8080/tutorials/${id}`,{\r\n            contactName: contact,\r\n            phoneNumber: phone\r\n        })\r\n      }catch(err){\r\n          console.error(err)\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={toggle}>{buttonLabel}</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Update Contact</ModalHeader>\r\n        <ModalBody>\r\n        <Form>\r\n      <FormGroup>\r\n        <Label for=\"contact\">Contact</Label>\r\n        <Input type=\"text\" name=\"contact\" placeholder=\"Enter contact name\" value={contact} onChange={event => setContactName(event.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"phone\">Phone Number</Label>\r\n        <Input type=\"text\" name=\"phone\" value={phone} placeholder=\"Enter phone number\" onChange={event => setPhoneNumber(event.target.value)} />\r\n      </FormGroup>\r\n    </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => {\r\n              updateContact()\r\n              toggle()\r\n              update()\r\n              }}>Update</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateModal;","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\DeleteModal.js",["51"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n\r\nconst DeleteModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n    id,\r\n    update\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const deleteRequest = async() => {\r\n      await axios.delete(`http://localhost:8080/tutorials/${id}`)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        {/* <ModalHeader toggle={toggle}>Modal title</ModalHeader> */}\r\n        <ModalBody>\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={() => {\r\n            deleteRequest()\r\n            toggle()\r\n            update()\r\n            }}>Delete</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteModal;","C:\\Users\\andre\\Desktop\\Projects\\Selma\\frontend\\src\\components\\CreateModal.js",["52","53"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText  } from 'reactstrap';\r\nimport axios from 'axios'\r\n\r\nconst CreateModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n    update\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [contact, setContactName] = useState()\r\n  const [phone, setPhoneNumber] = useState()\r\n  \r\n  const toggle = () => setModal(!modal);\r\n  const createContact = async() => {\r\n      try{\r\n        await axios.post(`http://localhost:8080/tutorials`,{\r\n            contactName: contact,\r\n            phoneNumber: phone\r\n        })\r\n      }catch(err){\r\n          console.error(err)\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={toggle}>{buttonLabel}</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Create Contact</ModalHeader>\r\n        <ModalBody>\r\n        <Form>\r\n      <FormGroup>\r\n        <Label for=\"contact\">Contact</Label>\r\n        <Input type=\"text\" name=\"contact\" placeholder=\"Enter contact name\" value={contact} onChange={event => setContactName(event.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"phone\">Phone Number</Label>\r\n        <Input type=\"text\" name=\"phone\" value={phone} placeholder=\"Enter phone number\" onChange={event => setPhoneNumber(event.target.value)} />\r\n      </FormGroup>\r\n    </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => {\r\n              createContact()\r\n              toggle()\r\n              update()\r\n              }}>Create</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateModal;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":3,"nodeType":"60","messageId":"61","endLine":3,"endColumn":11},{"ruleId":"58","severity":1,"message":"62","line":5,"column":3,"nodeType":"60","messageId":"61","endLine":5,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":6},{"ruleId":"58","severity":1,"message":"64","line":8,"column":3,"nodeType":"60","messageId":"61","endLine":8,"endColumn":10},{"ruleId":"58","severity":1,"message":"65","line":9,"column":3,"nodeType":"60","messageId":"61","endLine":9,"endColumn":10},{"ruleId":"58","severity":1,"message":"66","line":10,"column":3,"nodeType":"60","messageId":"61","endLine":10,"endColumn":23},{"ruleId":"58","severity":1,"message":"67","line":11,"column":3,"nodeType":"60","messageId":"61","endLine":11,"endColumn":17},{"ruleId":"58","severity":1,"message":"68","line":12,"column":3,"nodeType":"60","messageId":"61","endLine":12,"endColumn":15},{"ruleId":"58","severity":1,"message":"69","line":13,"column":3,"nodeType":"60","messageId":"61","endLine":13,"endColumn":15},{"ruleId":"58","severity":1,"message":"70","line":14,"column":3,"nodeType":"60","messageId":"61","endLine":14,"endColumn":13},{"ruleId":"58","severity":1,"message":"71","line":20,"column":9,"nodeType":"60","messageId":"61","endLine":20,"endColumn":15},{"ruleId":"58","severity":1,"message":"72","line":2,"column":93,"nodeType":"60","messageId":"61","endLine":2,"endColumn":101},{"ruleId":"73","severity":1,"message":"74","line":19,"column":13,"nodeType":"75","endLine":23,"endColumn":4},{"ruleId":"73","severity":1,"message":"76","line":23,"column":6,"nodeType":"77","endLine":23,"endColumn":8,"suggestions":"78"},{"ruleId":"58","severity":1,"message":"79","line":3,"column":25,"nodeType":"60","messageId":"61","endLine":3,"endColumn":36},{"ruleId":"58","severity":1,"message":"80","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"72","line":2,"column":93,"nodeType":"60","messageId":"61","endLine":2,"endColumn":101},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Collapse' is defined but never used.","Identifier","unusedVar","'NavbarToggler' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","'toggle' is assigned a value but never used.","'FormText' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'ModalHeader' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [id]",{"range":"86","text":"87"},[730,732],"[id]"]